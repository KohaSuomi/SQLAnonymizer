borrowers, borrowernumber, preserve, #This is a comment: we need to debug issues found in production and find the matching borrower in dev/testing
borrowers, surname,        sukunimet
borrowers, firstname,      etunimet
borrowers, othernames,     "sub { return $_[2]->[$_[3]]; }", #Pick the current index from the array of values in the INSERT-statement's value group
borrowers, title,          adjektiivit
borrowers, email,          "sub { return 'nobody@example.com'; }"
borrowers, phone,          "sub { return '000-000 0000'; }"
borrowers, userid,         adjektiivit
borrowers, opacnote,       quotes
borrowers, password,       "sub { return '$6$bmpusw./X$TkzFd8RSlVsPVNtGWmIgDDE9eV.FzK5WM/86EEZ3KtJOlAfwO6YtQLkm/jLQJUCpgdJKU5Ou4kAKiyEitrq/N.'; }"
borrowers, address,        addressWithSuffix()
borrowers, dateofbirth,    dateOfBirthAnonDayMonth(), #This uses a SQLAnon::Filter to do anonymization. You can extend your own!


message_queue, content,    "sub { return 'Ave Imperator, morituri te salutant'; }"
message_queue, to_address, "sub { return 'nobody@example.com'; }"

binaryblob, description,   "sub { return $_[2]->[$_[3]]; }", #Pick the current index from the array of values in the INSERT-statement's value group
binaryblob, biblob,        "sub { return $_[2]->[$_[3]]; }"
